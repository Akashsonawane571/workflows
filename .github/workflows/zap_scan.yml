name: ZAP Security Scan

on:
  push:
    branches: [ main ]
  pull_request: {}

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          docker network create zap-net || true
          docker pull bkimminich/juice-shop
          docker pull ghcr.io/zaproxy/zaproxy:stable

      - name: Start Juice Shop
        run: |
          docker run -d \
            --network zap-net \
            --name juice-shop \
            -p 3000:3000 \
            bkimminich/juice-shop
          
          # Wait with timeout and retries
          timeout 60 bash -c 'while ! curl -s http://localhost:3000 > /dev/null; do sleep 5; echo "Waiting for Juice Shop to start..."; done' || \
            (echo "Juice Shop failed to start"; exit 1)

      - name: Create reports directory
        run: mkdir -p zap-reports && chmod 777 zap-reports

      - name: Run ZAP Scan
        timeout-minutes: 30
        run: |
          docker run \
            --network zap-net \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            -u zap:zap \
            -t ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
            -t http://juice-shop:3000 \
            -r zap_report.html \
            -J zap_report.json \
            -x report.xml \
            -a \
            || true  # This ignores the exit code

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: zap-reports/*

      - name: Cleanup
        if: always()
        run: |
          docker rm -f juice-shop || true
          docker network rm zap-net || true
